// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       c if sel == 010
 *       d if sel == 011
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // We'll host a Mux Tournament
    // Compare successive pairs of inputs to their immediate neighbor using one bit of
    // sel at a time

    // first evaluate adjacent pairs of inputs based on the least significant bit in sel
    Mux16(a = a, b = b, sel = sel[0], out = ab);
    Mux16(a = c, b = d, sel = sel[0], out = cd);
    Mux16(a = e, b = f, sel = sel[0], out = ef);
    Mux16(a = g, b = h, sel = sel[0], out = gh);

    // aggregate our pairs into quadruples using the middle bit
    Mux16(a = ab, b = cd, sel = sel[1], out = abcd);
    Mux16(a = ef, b = gh, sel = sel[1], out = efgh);

    // make our final decision based on the most significant bit
    Mux16(a = abcd, b = efgh, sel = sel[2], out = out);
}